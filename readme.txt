Щоб почати писати проект по типу e-commerce:
1. Ініціювати проект, встановити початкові залежності (express, ejs)
2. Створити app.js, встановити роутер express, послухати порт на 3000; якщо працювати з шаблонами,то виконати app.set(), якщо шаблонізатор вже в експресі, або app.engine(), якщо його немає. Якщо працювати з css, то це робота зі статичними файлами app.use(express.static(path.join(__dirname, 'public'))).
3. Додати app.use(express.urlencoded({ extended: false })) (Він перетворює дані з форми (наприклад, з <form method="POST">) у звичайний об’єкт JavaScript і поміщає його у req.body)
4. Наступні кроки будуть пов*язані з окремими роутерами експресу і міддварами, які обробляють ці шляхи.


За моделлю MVC (model, view, controller)
Сторити папки: controllers, data, models, public, routes, utils, views.
Кожну сутність треба обробляти своїм набором MVC (наприклад, якщо це типовий магазин, то є такі сутності - shop, admin, error).

Shop
Спочатку створюємо окремий файл shop.js в /routes , де починаємо "слухати" окремий роутер в межах глобального: const router = express.Router(), експортуємо його в app.js - const clientRoutes = require('./routes/shop'), та прописуємо мідлвару app.use(clientRoutes).
В файлі роутера прописуємо мідлвари, які пов*язані з методом запиту і шляхом: router.get('/products/:productId', shopController.getProduct). Другий аргумент - це контролер, який обробляє дані (функція).

Далі прописуємо модель. Модель може бути типу від бази даних (наприклад, монгус в монгодб) або можемо її писати як клас.
Але модель чого? Модель - це об*єкт, у якого є свої властивості і методи. Наприклад, для магазина треба модель 1 продукта (ми зможемо сформувати багато потім), можемо прописати методи, які будуть робитися з 1 продуктом (знайти продукт за ід, змінити продукт за ід, видалити продукт за ід, дістати інформацію одного продукта, зберегти продукт після зміни в загальному списку всіх продуктів, сфетчити всі продукти).
А також багато маніпуляцій будемо робити з кошиком, тому його модель теж треба. Що в додатку можна робити з кошиком? Додавати продукти, видаляти продукти, збільшувати чи зменшувати кількість, рахувати загальну ціну, просто відображати всі продукти з товаром.
Всі маніпуляції з прототипами моделей потрібно проводити з урахуванням того, що об*єкт спочатку треба витягнути з бази (зчитати з файла), зробити з ним щось, потім "запхнути" в базу.


Робота з контролером shop.js
Для початку треба імпортувати моделі і створити прототипи.
const Product = require('../models/product')
На моделі Product є метод fetchAll, якиий очікує колбек. Спеціальний запис res.render дозоляє рендерити екрани (шлях, об*єкт з налаштуваннями)
exports.getProducts = (req,res,next) => {
    const products = Product.fetchAll((products) => {
        res.render('shop/product-list', {
        prods: products, 
        pageTitle: "All products", 
        path: '/products'
    })
    })
}





